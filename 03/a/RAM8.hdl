// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(
        in=load,
        sel=address,
        a=loadMem000,
        b=loadMem001,
        c=loadMem010,
        d=loadMem011,
        e=loadMem100,
        f=loadMem101,
        g=loadMem110,
        h=loadMem111);

    Register(in=in, load=loadMem000, out=mem000out);
    Register(in=in, load=loadMem001, out=mem001out);
    Register(in=in, load=loadMem010, out=mem010out);
    Register(in=in, load=loadMem011, out=mem011out);
    Register(in=in, load=loadMem100, out=mem100out);
    Register(in=in, load=loadMem101, out=mem101out);
    Register(in=in, load=loadMem110, out=mem110out);
    Register(in=in, load=loadMem111, out=mem111out);

    Mux8Way16(
        sel=address,
        a=mem000out,
        b=mem001out,
        c=mem010out,
        d=mem011out,
        e=mem100out,
        f=mem101out,
        g=mem110out,
        h=mem111out,
        out=out
    );
}